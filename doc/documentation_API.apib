FORMAT: 1A
HOST : carpooling.ipleiria.pt/api

# Going2Campus API documentation

This is the documentation for our car-sharing API, Going2Campus.

# Group Users

## User Collection [/users]


### Get All Users [GET /users]
+ Request 

    + Headers 
    
            x-access-token: 123token123
          
+ Response 200 (application/json)
    + Attributes (array[User])

+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "#Error#"
            }
            
### Get Me [GET /users/me]
+ Request 

    + Headers 
    
            x-access-token: 123token123
          
+ Response 200 (application/json)
    + Attributes (User)
    
+ Response 500 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "There was a problem finding the user."
            }
            
### Get My Notifications [GET /users/me/notifications]
+ Request 

    + Headers 
    
            x-access-token: 123token123
          
+ Response 200 (application/json)
    + Attributes 
        
        + Attributes (array[Notification])
    
+ Response 503 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "#Error#"
            }
            
+ Response 404 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "No user found"
            }
            
### Set Notification Read [PATCH /users/me/notifications/{id_notification}/read]
+ Request
    + Headers 
    
            x-access-token: 123token123
    
+ Parameter
    + id_notification: `1` - The id of the notification
            
    
+ Response 200 (application/json)

    + Attributes (Trip)
        - message (string)

    + Body
    
            {
                "message": "Notification update successfully."
            }

### Upload Profile Picture [POST /auth/me/uploadProfilePicture]
+ Request

    + Body

            {
                "picture": "image"
            }
+ Response 200 (application/json)

    + Attributes (User)
        - message   (string)
        
    + Body

            {
                "message": "Image Saved!"
            }

### Delete User [DELETE /users/{id}]
+ Request 

    + Headers 
    
            x-access-token: 123token123
            
+ Parameters
    + id
+ Response 200 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "User deleted successfully."
            }
    
+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "#Error#"
            }
            
+ Response 404 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "User not found."
            }

### Get User trips (as a driver) [GET /users/{id}/trips/driver]
+ Request 

    + Headers 
    
            x-access-token: 123token123
            
+ Parameters
    + id

+ Response 200 (application/json)
    + Attributes (array[Trip])
    
+ Response 404 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "No user/trip found"
            }
+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "#Error#"
            }
            
### Get User Past trips [GET /users/{id}/past_trips]
+ Parameters
    + id

+ Response 200 (application/json)
    + Attributes (array[Trip])
    
+ Response 404 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "No user found"
            }
+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "#Error#"
            }
            
### Get User Future trips [GET /users/{id}/future_trips]
+ Parameters
    + id

+ Response 200 (application/json)
    + Attributes (array[Trip])
    
+ Response 404 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "No user found"
            }
+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "#Error#"
            }
            
### Edit User [PATCH /users/{id}/edit]
+ Request 

    + Headers 
    
            x-access-token: 123token123
            
+ Parameters
    + id
    
+ Attributes (User)

+ Response 200 (application/json)
    + Attributes (User)
    
+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "#Error#"
            }

+ Response 403 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "Unauthorized request"
            }
            


# Group Trips

## Trip Collection [/trips]

### Create Trip [POST /trips]
+ Request 

    + Headers 
    
            x-access-token: 123token123
            
    + Body
    
            {
                "departureAddress": "Rua do Campo",
                "destinationAddress": "ESTG",
                "departureLatitude": "123",
                "departureLongitude": "123",
                "destinationLatitude": "234",
                "destinationLongitude": "345",
                "numberOfSeatsAvailable": "4",
                "tripDate": "2020/04/25 16:30",
                "duration": "123",
                "isFromCampus": "true",
                "autoAccept": "false"
            }
            
+ Response 200 (application/json)
    + Attributes
        - trip (Trip)
        
+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "#Error#"
            }

+ Response 400 (application/json)

    + Attributes
        - Array[string]
        
    + Body

            {
                "message": "#Error#"
            }


### Get All Trips [GET /trips{?departureAddress,destinationAddress,tripDate,numberOfSeatsAvailable,isFromCampus,departureLatitude,departureLongitude,destinationLatitude,destinationLongitude}]
+ Parameters
    + departureAddress (optional) - Rua A
    + destinationAddress (optional)- Rua B
    + tripDate (optional) - 2018-04-30T22:31:42.357Z
    + numberOfSeatsAvailable (optional) - 3
    + isFromCampus (optional) - true
    + departureLatitude (optional) - 24
    + departureLongitude (optional) - 15
    + destinationLatitude (optional) - 25
    + destinationLongitude (optional) - 15
    
+ Response 200 (application/json)
    + Attributes
        - trips (array[Trip])

### Edit Trip [PATCH /trips/{id}/edit]
+ Request 

    + Headers 
    
            x-access-token: 123token123
            
+ Parameters
    + id
    
+ Attributes (Trip)

+ Response 200 (application/json)
    + Attributes (Trip)
    
+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "#Error#"
            }

+ Response 403 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "Unauthorized request"
            }
            

 
### Add Passenger to Trip [PATCH /trips/{id}/add_passenger]
+ Request
    + Headers 
    
            x-access-token: 123token123
            
    + Body

            {
                "passengerId": "123456"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes
        - trip (Trip)

+ Response 202 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Car has no seats available."
            }
            
+ Response 400 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Bad request, wrong attribute name."
            }
            
+ Response 403 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Unauthorized Request."
            }
            
+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "#Error#"
            }

+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "This user does not exist."
            }

+ Response 409 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "The user you tried to had is the driver of the trip/This user is already listed for this trip."
            }

### Accept Passenger [PATCH /trips/{id}/accept_passenger]
+ Request
    + Headers 
    
            x-access-token: 123token123

    + Body

            {
                "passengerId": "123456"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes
        - trip (Trip)


+ Response 202 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Car has no seats available."
            }
                
+ Response 400 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Bad request, wrong attribute name."
            }

+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "#Error#"
            }
            
+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "This user/trip does not exist."
            }
            
+ Response 403 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Unauthorized Request."
            }
            
+ Response 409 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "User did not reserve this trip."
            }
            
### Cancel Trip [PATCH /trips/{id}/cancel]
+ Request
    + Body

            {
                "passengerId": "123456"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes
        - message (string)
        
    + Body
    
                {
                    "message": "Trip Cancelled Successfully"
                }  
            
            
+ Response 403 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Unauthorized Request."
            }
            
+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "#Error#"
            }
            
+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Trip not found."
            }

### Reject Passenger [PATCH /trips/{id}/reject_passenger]
+ Request
    + Headers 
    
            x-access-token: 123token123
            
    + Body

            {
                "passengerId": "123456"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes
        - trip (Trip)

+ Response 400 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Bad request, wrong attribute name."
            }
            
+ Response 403 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Unauthorized Request."
            }

+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "#Error#"
            }

+ Response 409 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "User did not reserve this trip."
            }

+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Trip/User not found."
            }

### Cancel Reservation [PATCH /trips/{id}/cancel_reservation]
+ Request
    + Headers 
    
            x-access-token: 123token123
      
    + Body

            {
                "passengerId": "123456"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes (Trip)
        - message (string)

    + Body
    
            {
                "message": "Reservation cancelled."
                "trip" : trip
            }
+ Response 403 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Unauthorized Request."
            }
            
+ Response 400 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Bad request, wrong attribute name."
            }

+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "#Error#"
            }

+ Response 409 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "User did not reserve this trip."
            }

+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Trip/User not found."
            }

### Rate [PATCH /trips/{id}/rate]
+ Request
    + Headers 
    
            x-access-token: 123token123
      
    + Body

            {
                "user": "123123123",
                "rate": "4"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes (Trip)
        - message (string)

    + Body
    
            {
                "message": "Reservation cancelled."
                "trip" : trip
            }

### Get Rates [GET /trips/{id}/rates]
+ Request
    + Headers 
    
            x-access-token: 123token123
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes (array[Rate])

            
# Group Auth

## Auth Collection [/auth]

### Register User [POST /auth/register]
+ Request

    + Body

            {
                "mail": "carlos@my.ipleiria.pt",
                "password": "secret",
                "name": "Carlos",
                "birthDate": "24/4/1995"
            }
+ Response 201 (application/json)

    + Attributes (User)
        - message   (string)
        
    + Body

            {
                "message": "We´ve sent a verification e-mail to carlos@my.ipleiria.pt."
                    "user": {
                        "rating": 0,
                        "numberOfRates": 0,
                        "preferences": [],
                        "cancelIndex": 0,
                        "admin": false,
                        "active": false,
                        "cancelCounter": 0,
                        "_id": "5ae7994ef705a11fb054ab39",
                        "name": "yo",
                        "mail": "carlos@my.ipleiria.pt",
                        "birthDate": "1995-04-24T00:00:00.000Z",
                        "createdAt": "2018-04-30T22:31:42.357Z",
                        "updatedAt": "2018-04-30T22:31:42.357Z",
                        "__v": 0
                    }
            }

### Login User [POST /auth/login]
+ Request

    + Body

            {
                "mail": "carlos@my.ipleiria.pt",
                "password": "secret",
            }
+ Response 200 (application/json)

    + Attributes
        - token (string)
        - auth (boolean)
        - user (User)
    
    + Body

            {
                "auth": true,
                "token": 123123123123
                "user": {
                    "rating": 0,
                    "numberOfRates": 0,
                    "preferences": [],
                    "cancelIndex": 0,
                    "admin": false,
                    "active": false,
                    "cancelCounter": 0,
                    "_id": "5ae7994ef705a11fb054ab39",
                    "name": "yo",
                    "mail": "carlos@my.ipleiria.pt",
                    "birthDate": "1995-04-24T00:00:00.000Z",
                    "createdAt": "2018-04-30T22:31:42.357Z",
                    "updatedAt": "2018-04-30T22:31:42.357Z",
                    "__v": 0
                }
            }

### Ask for Reset [GET /auth/askForReset{?email}]
+ Parameters
    - email (optional) - jose.cruzbasso@gmai.com
+ Response 200 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Mail sent with a request confirmation."
            }
+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Email not found."
            }
            
+ Response 500 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "#Error#"
            }

# Data Structures

## User(object)
- mail: user@ipl.com (string) - The user's e-mail
- name: José Milho (string) - The user's name
- rating: 5 (number) - The user's rating (0-5)
- numberOfRates: 420 (number) - How many rates the user has been given
- preferences: talker, smoker (array[string]) - User's preferences being the driver
- birthDate: `1997-09-08T23:00:00.000Z` (string) - User's date of birth
- cancel_index: 0.1 (number) - How often this user cancels a trip

## Trip(object)
- departureAddress: Campus 2 Morro do Lena, Alto do Vieiro, Apt 4163, Edifício D, 2411 901 Leiria (string) - The departure Address
- destination:  Campus 1 Rua Dr. João Soares Apt 4045 Leiria (string) - The destination Address
- departureLatitude: 26.81 (number) - The departure's latitude
- departureLongitude: 91.53 (number) - The departure's longitude
- destinationLatitude: 23.17 (number) - The destination's latitude
- destinationLongitude: 88.15 (number) - The destination's longitude
- numberOfSeatsAvailable: 4 (number) - The number of seats still numberOfSeatsAvailable
- tripDate: `2019-12-31 14:30:00` (string) - Trip departure's date
- duration: 120 (number) - Trip duration in minutes
- driver: User - Trip driver
- departure: true (boolean) - Whether the trip is to campus or from campus
- passengers: Carlos, Miguel (array[User]) - Array of Passengers
- status: LISTED (string) - Status of the trip LISTED, CANCELED
- stoppingAddresses: Rua das Portelas, Rua do Campo (array[string]) - Addresses where the trip will stop
- autoAccept: true (boolean) - Auto accepting any passenger
- pendingPassengers: Carlos, Miguel (array[User]) - Array of Passengers

## Notification(object)
- toUser : User
- fromUser: User
- trip: Trip
- type: true (boolean) - Notification type
- message: "New passenger" (string)


## Rate(object)
- evaluator : User
- evaluated: User
- trip: Trip
- rate: 5 (number)
