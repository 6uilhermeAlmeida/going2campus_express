FORMAT: 1A
HOST : 172.22.21.11:3000

# Going2Campus API documentation

This is the documentation for our car-sharing API, Going2Campus.

# Group Users

## User Collection [/users]

### Get All Users [GET]
+ Response 200 (application/json)
    + Attributes (array[User])

### Get Me [GET /me]
+ Response 200 (application/json)
    + Attributes (User)
    
+ Response 500 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "There was a problem finding the user."
            }
            
+ Response 404 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "No user found"
            }

### Delete User [DELETE /{id}]
+ Parameters
    + id
+ Response 200 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "User deleted successfully."
            }
    
+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "Could not delete/retrieve the user."
            }
            
+ Response 404 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "User not found."
            }

### Get User trips (as a driver) [GET /{id}/trips/driver]
+ Parameters
    + id

+ Response 200 (application/json)
    + Attributes (array[Trip])
    
+ Response 404 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "No user/trip found"
            }
+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "Database error, could not find user/trips."
            }
            
### Get User trips [GET /{id}/trips]
+ Parameters
    + id

+ Response 200 (application/json)
    + Attributes (array[Trip])
    
+ Response 404 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "No user found"
            }
+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "Database error, could not find user/trips."
            }
            
### Edit User [PATCH /{id}/edit]
+ Parameters
    + id
    
+ Attributes (User)

+ Response 200 (application/json)
    + Attributes (User)
    
+ Response 503 (application/json)

    + Attributes 
        + message  (string)
        
    + Body

            {
                "message" : "Database error, can't find user."
            }

+ Response 403 (application/json)

    + Attributes 
        +message (string)
        
    + Body

            {
                "message" : "Unauthorized request"
            }
            


# Group Trips

## Trip Collection [/trips]

### Get All Trips [GET /trips]
+ Response 200 (application/json)
    + Attributes
        - trips (array[Trip])

        
### Add Passenger to Trip [PATCH /trips/{id}/add_passenger]
+ Request
    + Body

            {
                "passengerId": "123456"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes
        - trip (Trip)

+ Response 202 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Car has no seats available."
            }
            
+ Response 400 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Bad request, wrong attribute name."
            }
            
+ Response 403 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Unauthorized Request."
            }
            
+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "We can't know if you are a user or not."
            }

+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "This user does not exist."
            }

+ Response 409 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "The user you tried to had is the driver of the trip/This user is already listed for this trip."
            }

### Accept Passenger [PATCH /trips/{id}/accept_passenger]
+ Request
    + Body

            {
                "passengerId": "123456"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes
        - trip (Trip)


+ Response 202 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Car has no seats available."
            }
                
+ Response 400 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Bad request, wrong attribute name."
            }

+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "We can't know if you are a user or not."
            }
            
+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "This user/trip does not exist."
            }
            
+ Response 403 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Unauthorized Request."
            }
            
+ Response 409 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "User did not reserve this trip."
            }
            
### Cancel Trip [PATCH /trips/{id}/cancel]
+ Request
    + Body

            {
                "passengerId": "123456"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes
        - message (string)
        
    + Body
    
                {
                    "message": "Trip Cancelled Successfully"
                }  
            
            
+ Response 403 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Unauthorized Request."
            }
            
+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Something went wrong with the database."
            }
            
+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Trip not found."
            }

### Reject Passenger [PATCH /trips/{id}/reject_passenger]
+ Request
    + Body

            {
                "passengerId": "123456"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes
        - trip (Trip)

+ Response 403 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Unauthorized Request."
            }

+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Error saving to database."
            }

+ Response 409 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "User did not reserve this trip."
            }

+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Trip/User not found."
            }

### Cancel Reservation [PATCH /trips/{id}/cancel_reservation]
+ Request
    + Body

            {
                "passengerId": "123456"
            }
    
+ Parameter
    + id: `1` - The id of the trip
            
    
+ Response 200 (application/json)

    + Attributes (Trip)
        - message (string)

    + Body
    
            {
                "message": "Reservation cancelled."
                "trip" : trip
            }
+ Response 403 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Unauthorized Request."
            }

+ Response 503 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Error saving to database."
            }

+ Response 409 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "User did not reserve this trip."
            }

+ Response 404 (application/json)

    + Attributes
        - message   (string)
        
    + Body

            {
                "message": "Trip/User not found."
            }

# Data Structures

## User(object)
- mail: user@ipl.com (string) - The user's e-mail
- name: José Milho (string) - The user's name
- rating: 5 (number) - The user's rating (0-5)
- numberOfRates: 420 (number) - How many rates the user has been given
- preferences: talker, smoker (array[string]) - User's preferences being the driver
- birthDate: `1997-09-08T23:00:00.000Z` (string) - User's date of birth
- cancel_index: 0.1 (number) - How often this user cancels a trip

## Trip(object)
- departureAddress: Campus 2 Morro do Lena, Alto do Vieiro, Apt 4163, Edifício D, 2411 901 Leiria (string) - The departure Address
- destination:  Campus 1 Rua Dr. João Soares Apt 4045 Leiria (string) - The destination Address
- departureLatitude: 26.81 (number) - The departure's latitude
- departureLongitude: 91.53 (number) - The departure's longitude
- destinationLatitude: 23.17 (number) - The destination's latitude
- destinationLongitude: 88.15 (number) - The destination's longitude
- numberOfSeatsAvailable: 4 (number) - The number of seats still numberOfSeatsAvailable
- tripDate: `2019-12-31T14:30:00.000Z` (string) - Trip departure's date
- duration: 120 (number) - Trip duration in minutes
- driver: User - Trip driver
- departure: true (boolean) - Whether the trip is to campus or from campus
- passengers: Carlos, Miguel (array[User]) - Array of Passengers
- status: ONGOING (string) - Status of the trip LISTED, ONGOING, FINISHED, CANCELED
- stoppingAddresses: Rua das Portelas, Rua do Campo (array[string]) - Addresses where the trip will stop
- autoAccept: true (boolean) - Auto accepting any passenger
- pendingPassengers: Carlos, Miguel (array[User]) - Array of Passengers